name: Build and release on tag push
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      distribution_name: ${{ steps.get_distribution_name.outputs.name }}
    steps:
      - name: Get distribution name
        id: get_distribution_name
        run: |
          version=${{ github.ref_name }}
          echo name=$(basename ${{ github.repository }})-Dist-${version#v} >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build distribution
        run: |
          python setup.py
      - name: Archive distribution
        run: |
          mv dist ${{ steps.get_distribution_name.outputs.name }}
          tar -czvf ${{ steps.get_distribution_name.outputs.name }}.tar.gz ${{ steps.get_distribution_name.outputs.name }}
      - name: Upload distribution
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.get_distribution_name.outputs.name }}
          path: ${{ steps.get_distribution_name.outputs.name }}.tar.gz
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download distribution
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build.outputs.distribution_name }}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ needs.build.outputs.distribution_name }}.tar.gz
          asset_name: ${{ needs.build.outputs.distribution_name }}.tar.gz
          asset_content_type: application/gzip
